/*
 * This file is generated by jOOQ.
 */
package com.wordpress.kkaravitis.pricing.jooq.tables.records;


import com.wordpress.kkaravitis.pricing.jooq.tables.ProductPriceResults;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductPriceResultsRecord extends UpdatableRecordImpl<ProductPriceResultsRecord> implements Record10<Long, String, String, BigDecimal, String, LocalDateTime, Double, Double, Double, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product_price_results.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.product_price_results.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.product_price_results.product_id</code>.
     */
    public void setProductId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.product_price_results.product_id</code>.
     */
    public String getProductId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.product_price_results.product_name</code>.
     */
    public void setProductName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.product_price_results.product_name</code>.
     */
    public String getProductName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.product_price_results.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.product_price_results.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.product_price_results.currency</code>.
     */
    public void setCurrency(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.product_price_results.currency</code>.
     */
    public String getCurrency() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.product_price_results.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.product_price_results.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.product_price_results.demand_metric</code>.
     */
    public void setDemandMetric(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.product_price_results.demand_metric</code>.
     */
    public Double getDemandMetric() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>public.product_price_results.competitor_price</code>.
     */
    public void setCompetitorPrice(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.product_price_results.competitor_price</code>.
     */
    public Double getCompetitorPrice() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>public.product_price_results.inventory_level</code>.
     */
    public void setInventoryLevel(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.product_price_results.inventory_level</code>.
     */
    public Double getInventoryLevel() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.product_price_results.model_prediction</code>.
     */
    public void setModelPrediction(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.product_price_results.model_prediction</code>.
     */
    public BigDecimal getModelPrediction() {
        return (BigDecimal) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, BigDecimal, String, LocalDateTime, Double, Double, Double, BigDecimal> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, BigDecimal, String, LocalDateTime, Double, Double, Double, BigDecimal> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.ID;
    }

    @Override
    public Field<String> field2() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.PRODUCT_ID;
    }

    @Override
    public Field<String> field3() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.PRODUCT_NAME;
    }

    @Override
    public Field<BigDecimal> field4() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.PRICE;
    }

    @Override
    public Field<String> field5() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.CURRENCY;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.TIMESTAMP;
    }

    @Override
    public Field<Double> field7() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.DEMAND_METRIC;
    }

    @Override
    public Field<Double> field8() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.COMPETITOR_PRICE;
    }

    @Override
    public Field<Double> field9() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.INVENTORY_LEVEL;
    }

    @Override
    public Field<BigDecimal> field10() {
        return ProductPriceResults.PRODUCT_PRICE_RESULTS.MODEL_PREDICTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getProductId();
    }

    @Override
    public String component3() {
        return getProductName();
    }

    @Override
    public BigDecimal component4() {
        return getPrice();
    }

    @Override
    public String component5() {
        return getCurrency();
    }

    @Override
    public LocalDateTime component6() {
        return getTimestamp();
    }

    @Override
    public Double component7() {
        return getDemandMetric();
    }

    @Override
    public Double component8() {
        return getCompetitorPrice();
    }

    @Override
    public Double component9() {
        return getInventoryLevel();
    }

    @Override
    public BigDecimal component10() {
        return getModelPrediction();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getProductId();
    }

    @Override
    public String value3() {
        return getProductName();
    }

    @Override
    public BigDecimal value4() {
        return getPrice();
    }

    @Override
    public String value5() {
        return getCurrency();
    }

    @Override
    public LocalDateTime value6() {
        return getTimestamp();
    }

    @Override
    public Double value7() {
        return getDemandMetric();
    }

    @Override
    public Double value8() {
        return getCompetitorPrice();
    }

    @Override
    public Double value9() {
        return getInventoryLevel();
    }

    @Override
    public BigDecimal value10() {
        return getModelPrediction();
    }

    @Override
    public ProductPriceResultsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value2(String value) {
        setProductId(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value3(String value) {
        setProductName(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value4(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value5(String value) {
        setCurrency(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value6(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value7(Double value) {
        setDemandMetric(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value8(Double value) {
        setCompetitorPrice(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value9(Double value) {
        setInventoryLevel(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord value10(BigDecimal value) {
        setModelPrediction(value);
        return this;
    }

    @Override
    public ProductPriceResultsRecord values(Long value1, String value2, String value3, BigDecimal value4, String value5, LocalDateTime value6, Double value7, Double value8, Double value9, BigDecimal value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductPriceResultsRecord
     */
    public ProductPriceResultsRecord() {
        super(ProductPriceResults.PRODUCT_PRICE_RESULTS);
    }

    /**
     * Create a detached, initialised ProductPriceResultsRecord
     */
    public ProductPriceResultsRecord(Long id, String productId, String productName, BigDecimal price, String currency, LocalDateTime timestamp, Double demandMetric, Double competitorPrice, Double inventoryLevel, BigDecimal modelPrediction) {
        super(ProductPriceResults.PRODUCT_PRICE_RESULTS);

        setId(id);
        setProductId(productId);
        setProductName(productName);
        setPrice(price);
        setCurrency(currency);
        setTimestamp(timestamp);
        setDemandMetric(demandMetric);
        setCompetitorPrice(competitorPrice);
        setInventoryLevel(inventoryLevel);
        setModelPrediction(modelPrediction);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProductPriceResultsRecord
     */
    public ProductPriceResultsRecord(com.wordpress.kkaravitis.pricing.jooq.tables.pojos.ProductPriceResults value) {
        super(ProductPriceResults.PRODUCT_PRICE_RESULTS);

        if (value != null) {
            setId(value.getId());
            setProductId(value.getProductId());
            setProductName(value.getProductName());
            setPrice(value.getPrice());
            setCurrency(value.getCurrency());
            setTimestamp(value.getTimestamp());
            setDemandMetric(value.getDemandMetric());
            setCompetitorPrice(value.getCompetitorPrice());
            setInventoryLevel(value.getInventoryLevel());
            setModelPrediction(value.getModelPrediction());
            resetChangedOnNotNull();
        }
    }
}
