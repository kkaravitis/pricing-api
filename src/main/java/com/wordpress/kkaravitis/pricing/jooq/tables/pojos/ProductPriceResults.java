/*
 * This file is generated by jOOQ.
 */
package com.wordpress.kkaravitis.pricing.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductPriceResults implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String productId;
    private String productName;
    private BigDecimal price;
    private String currency;
    private LocalDateTime timestamp;
    private Double demandMetric;
    private Double competitorPrice;
    private Double inventoryLevel;
    private Double modelPrediction;

    public ProductPriceResults() {}

    public ProductPriceResults(ProductPriceResults value) {
        this.id = value.id;
        this.productId = value.productId;
        this.productName = value.productName;
        this.price = value.price;
        this.currency = value.currency;
        this.timestamp = value.timestamp;
        this.demandMetric = value.demandMetric;
        this.competitorPrice = value.competitorPrice;
        this.inventoryLevel = value.inventoryLevel;
        this.modelPrediction = value.modelPrediction;
    }

    public ProductPriceResults(
        Long id,
        String productId,
        String productName,
        BigDecimal price,
        String currency,
        LocalDateTime timestamp,
        Double demandMetric,
        Double competitorPrice,
        Double inventoryLevel,
        Double modelPrediction
    ) {
        this.id = id;
        this.productId = productId;
        this.productName = productName;
        this.price = price;
        this.currency = currency;
        this.timestamp = timestamp;
        this.demandMetric = demandMetric;
        this.competitorPrice = competitorPrice;
        this.inventoryLevel = inventoryLevel;
        this.modelPrediction = modelPrediction;
    }

    /**
     * Getter for <code>public.product_price_results.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.product_price_results.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.product_price_results.product_id</code>.
     */
    public String getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>public.product_price_results.product_id</code>.
     */
    public void setProductId(String productId) {
        this.productId = productId;
    }

    /**
     * Getter for <code>public.product_price_results.product_name</code>.
     */
    public String getProductName() {
        return this.productName;
    }

    /**
     * Setter for <code>public.product_price_results.product_name</code>.
     */
    public void setProductName(String productName) {
        this.productName = productName;
    }

    /**
     * Getter for <code>public.product_price_results.price</code>.
     */
    public BigDecimal getPrice() {
        return this.price;
    }

    /**
     * Setter for <code>public.product_price_results.price</code>.
     */
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    /**
     * Getter for <code>public.product_price_results.currency</code>.
     */
    public String getCurrency() {
        return this.currency;
    }

    /**
     * Setter for <code>public.product_price_results.currency</code>.
     */
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for <code>public.product_price_results.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return this.timestamp;
    }

    /**
     * Setter for <code>public.product_price_results.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Getter for <code>public.product_price_results.demand_metric</code>.
     */
    public Double getDemandMetric() {
        return this.demandMetric;
    }

    /**
     * Setter for <code>public.product_price_results.demand_metric</code>.
     */
    public void setDemandMetric(Double demandMetric) {
        this.demandMetric = demandMetric;
    }

    /**
     * Getter for <code>public.product_price_results.competitor_price</code>.
     */
    public Double getCompetitorPrice() {
        return this.competitorPrice;
    }

    /**
     * Setter for <code>public.product_price_results.competitor_price</code>.
     */
    public void setCompetitorPrice(Double competitorPrice) {
        this.competitorPrice = competitorPrice;
    }

    /**
     * Getter for <code>public.product_price_results.inventory_level</code>.
     */
    public Double getInventoryLevel() {
        return this.inventoryLevel;
    }

    /**
     * Setter for <code>public.product_price_results.inventory_level</code>.
     */
    public void setInventoryLevel(Double inventoryLevel) {
        this.inventoryLevel = inventoryLevel;
    }

    /**
     * Getter for <code>public.product_price_results.model_prediction</code>.
     */
    public Double getModelPrediction() {
        return this.modelPrediction;
    }

    /**
     * Setter for <code>public.product_price_results.model_prediction</code>.
     */
    public void setModelPrediction(Double modelPrediction) {
        this.modelPrediction = modelPrediction;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductPriceResults other = (ProductPriceResults) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.productName == null) {
            if (other.productName != null)
                return false;
        }
        else if (!this.productName.equals(other.productName))
            return false;
        if (this.price == null) {
            if (other.price != null)
                return false;
        }
        else if (!this.price.equals(other.price))
            return false;
        if (this.currency == null) {
            if (other.currency != null)
                return false;
        }
        else if (!this.currency.equals(other.currency))
            return false;
        if (this.timestamp == null) {
            if (other.timestamp != null)
                return false;
        }
        else if (!this.timestamp.equals(other.timestamp))
            return false;
        if (this.demandMetric == null) {
            if (other.demandMetric != null)
                return false;
        }
        else if (!this.demandMetric.equals(other.demandMetric))
            return false;
        if (this.competitorPrice == null) {
            if (other.competitorPrice != null)
                return false;
        }
        else if (!this.competitorPrice.equals(other.competitorPrice))
            return false;
        if (this.inventoryLevel == null) {
            if (other.inventoryLevel != null)
                return false;
        }
        else if (!this.inventoryLevel.equals(other.inventoryLevel))
            return false;
        if (this.modelPrediction == null) {
            if (other.modelPrediction != null)
                return false;
        }
        else if (!this.modelPrediction.equals(other.modelPrediction))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.productName == null) ? 0 : this.productName.hashCode());
        result = prime * result + ((this.price == null) ? 0 : this.price.hashCode());
        result = prime * result + ((this.currency == null) ? 0 : this.currency.hashCode());
        result = prime * result + ((this.timestamp == null) ? 0 : this.timestamp.hashCode());
        result = prime * result + ((this.demandMetric == null) ? 0 : this.demandMetric.hashCode());
        result = prime * result + ((this.competitorPrice == null) ? 0 : this.competitorPrice.hashCode());
        result = prime * result + ((this.inventoryLevel == null) ? 0 : this.inventoryLevel.hashCode());
        result = prime * result + ((this.modelPrediction == null) ? 0 : this.modelPrediction.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProductPriceResults (");

        sb.append(id);
        sb.append(", ").append(productId);
        sb.append(", ").append(productName);
        sb.append(", ").append(price);
        sb.append(", ").append(currency);
        sb.append(", ").append(timestamp);
        sb.append(", ").append(demandMetric);
        sb.append(", ").append(competitorPrice);
        sb.append(", ").append(inventoryLevel);
        sb.append(", ").append(modelPrediction);

        sb.append(")");
        return sb.toString();
    }
}
