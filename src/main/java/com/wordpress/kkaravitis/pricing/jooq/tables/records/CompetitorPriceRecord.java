/*
 * This file is generated by jOOQ.
 */
package com.wordpress.kkaravitis.pricing.jooq.tables.records;


import com.wordpress.kkaravitis.pricing.jooq.tables.CompetitorPrice;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CompetitorPriceRecord extends UpdatableRecordImpl<CompetitorPriceRecord> implements Record5<Long, String, String, BigDecimal, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.competitor_price.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.competitor_price.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.competitor_price.product_id</code>.
     */
    public void setProductId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.competitor_price.product_id</code>.
     */
    public String getProductId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.competitor_price.product_name</code>.
     */
    public void setProductName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.competitor_price.product_name</code>.
     */
    public String getProductName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.competitor_price.competitor_price</code>.
     */
    public void setCompetitorPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.competitor_price.competitor_price</code>.
     */
    public BigDecimal getCompetitorPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.competitor_price.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.competitor_price.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, BigDecimal, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, BigDecimal, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CompetitorPrice.COMPETITOR_PRICE.ID;
    }

    @Override
    public Field<String> field2() {
        return CompetitorPrice.COMPETITOR_PRICE.PRODUCT_ID;
    }

    @Override
    public Field<String> field3() {
        return CompetitorPrice.COMPETITOR_PRICE.PRODUCT_NAME;
    }

    @Override
    public Field<BigDecimal> field4() {
        return CompetitorPrice.COMPETITOR_PRICE.COMPETITOR_PRICE_;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return CompetitorPrice.COMPETITOR_PRICE.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getProductId();
    }

    @Override
    public String component3() {
        return getProductName();
    }

    @Override
    public BigDecimal component4() {
        return getCompetitorPrice();
    }

    @Override
    public OffsetDateTime component5() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getProductId();
    }

    @Override
    public String value3() {
        return getProductName();
    }

    @Override
    public BigDecimal value4() {
        return getCompetitorPrice();
    }

    @Override
    public OffsetDateTime value5() {
        return getUpdatedAt();
    }

    @Override
    public CompetitorPriceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CompetitorPriceRecord value2(String value) {
        setProductId(value);
        return this;
    }

    @Override
    public CompetitorPriceRecord value3(String value) {
        setProductName(value);
        return this;
    }

    @Override
    public CompetitorPriceRecord value4(BigDecimal value) {
        setCompetitorPrice(value);
        return this;
    }

    @Override
    public CompetitorPriceRecord value5(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CompetitorPriceRecord values(Long value1, String value2, String value3, BigDecimal value4, OffsetDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompetitorPriceRecord
     */
    public CompetitorPriceRecord() {
        super(CompetitorPrice.COMPETITOR_PRICE);
    }

    /**
     * Create a detached, initialised CompetitorPriceRecord
     */
    public CompetitorPriceRecord(Long id, String productId, String productName, BigDecimal competitorPrice, OffsetDateTime updatedAt) {
        super(CompetitorPrice.COMPETITOR_PRICE);

        setId(id);
        setProductId(productId);
        setProductName(productName);
        setCompetitorPrice(competitorPrice);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CompetitorPriceRecord
     */
    public CompetitorPriceRecord(com.wordpress.kkaravitis.pricing.jooq.tables.pojos.CompetitorPrice value) {
        super(CompetitorPrice.COMPETITOR_PRICE);

        if (value != null) {
            setId(value.getId());
            setProductId(value.getProductId());
            setProductName(value.getProductName());
            setCompetitorPrice(value.getCompetitorPrice());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
